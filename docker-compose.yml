version: '3.8'
## MYSQL config
services:
  mysql-microservice:
    image: mysql:8.0.33
    container_name: mysql-microservice
    ports:
      - "3306:3306"
    restart: always
    volumes:
       - /Users/duyphuong/Desktop/HaiNH/database/mysql/mysql8.0.33:/var/lib/mysql
       - /Users/duyphuong/Desktop/HaiNH/Java/microservice/data:/docker-entrypoint-initdb.d
    networks:
      backend:
    environment:
      MYSQL_USER: hainh
      MYSQL_PASSWORD: Admin123
      MYSQL_ROOT_PASSWORD: Admin123
      MYSQL_DATABASE: testdata

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## REDIS config
  redis-container:
    image: redis:latest
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /Users/duyphuong/Desktop/HaiNH/redis:/data
    networks:
      backend:

#
#  ## discovery-service config
#  discovery-service:
#    image: nhh0507/discovery-service:v1.0.0
#    container_name: discovery-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    ports:
#      - "8761:8761"
#    networks:
#      backend:
#
### gateway-service config
#  gateway-service:
#    image: nhh0507/gateway-service:v1.0.0
#    container_name: gateway-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
#    ports:
#      - "9004:9004"
#    networks:
#      backend:
#    depends_on:
#      - discovery-service
#
### identity-service config
#  identity-service:
#    image: nhh0507/identity-service:v1.0.0
#    container_name: identity-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-microservice:3306/testdata
#    ports:
#      - "9006:9006"
#    networks:
#      backend:
#    depends_on:
#      - discovery-service
#      - gateway-service
#      - mysql-microservice
#
### identity-service config
#  inventory-service:
#    image: nhh0507/inventory-service:v1.0.0
#    container_name: inventory-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-microservice:3306/testdata
#    ports:
#      - "9003:9003"
#    networks:
#      backend:
#    depends_on:
#      - discovery-service
#      - gateway-service
#      - mysql-microservice
#
### product-service config
#  product-service:
#    image: nhh0507/product-service:v1.0.0
#    container_name: product-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-microservice:3306/testdata
#    ports:
#      - "9001:9001"
#    networks:
#      backend:
#    depends_on:
#      - discovery-service
#      - gateway-service
#      - mysql-microservice
#
### order-service config
#  order-service:
#    image: nhh0507/order-service:v1.0.0
#    container_name: order-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-microservice:3306/testdata
#    ports:
#      - "9002:9002"
#    networks:
#      backend:
#    depends_on:
#      - discovery-service
#      - gateway-service
#      - mysql-microservice

## create network
networks:
  backend:
    name: springboot-app-network
